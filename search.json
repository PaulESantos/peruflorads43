[{"path":"https://paulesantos.github.io/peruflorads43/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 peruflorads43 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul E. Santos Andrade. Author, maintainer.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Santos-Andrade P.E. (2023). peruflorads43: Reviewed Official Classification Endangered Wild Flora Species Peru. R package version 0.1.1","code":"@Manual{,   title = {peruflorads43: Reviewed Official Classification of Endangered Wild Flora Species in Peru},   author = {Paul E. Santos Andrade},   year = {2023},   url = {https://github.com/PaulESantos/peruflorads43}, }"},{"path":"https://paulesantos.github.io/peruflorads43/index.html","id":"peruflorads43","dir":"","previous_headings":"","what":"Check Threatened Plant Species Status Against Peru's DS 043-2006-AG","title":"Check Threatened Plant Species Status Against Peru's DS 043-2006-AG","text":"El objetivo de peruflorads43 es brindar los usuarios una forma cómoda de acceder y analizar información sobre las especies de plantas incluidas en la “Clasificación Oficial de Especies Amenazadas de Flora Silvestre en el Perú”. Este paquete incluye funciones para buscar coincidencias parciales de los nombres de las especies.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/index.html","id":"instalación","dir":"","previous_headings":"","what":"Instalación","title":"Check Threatened Plant Species Status Against Peru's DS 043-2006-AG","text":"La version estable de peruflorads43 puede ser instalada desde CRAN, con la ayuda de: Para instalar la versión en desarrollo de peruflorads43 desde GitHub, se puede utilizar el siguiente comando :","code":"install.packages(\"peruflorads43\")  # or  pak::pak(\"peruflorads43\") pak::pak(\"PaulEsantos/peruflorads43\")"},{"path":"https://paulesantos.github.io/peruflorads43/index.html","id":"comentarios","dir":"","previous_headings":"","what":"Comentarios","title":"Check Threatened Plant Species Status Against Peru's DS 043-2006-AG","text":"1.- En relación la información contenida en el listado de especies, se ha identificado el registro duplicado de la especie Bishopanthus soliceps, la cual se encuentra en peligro crítico. 2.- Asimismo, se han detectado errores en la escritura de los nombres de las algunas especies, se corrigieron estos errores para asegurar la precisión de la información en incorporada en peruflorads43. 3.- La lista de especies se ha reducido debido la actualización de la información taxonómica. Se han identificado especies que fueron registradas con nombres diferentes en el momento de la elaboración del listado, y en la actualidad se ha unificado el nombre utilizado para referirse ellas. Por lo tanto, se ha producido una reducción en el número de especies listadas, pero se ha mejorado la precisión y consistencia de la información en peruflorads43. 4.- Para las especies listadas bajo la categoría de forma: Haageocereus acranthus subsp. olowinskianus forma clavispinus (Rauh & Backeberg) Ostolaza Haageocereus acranthus subsp. olowinskianus forma repandus (Rauh & Backeberg) Ostolaza Haageocereus acranthus subsp. olowinskianus forma rubriflorior (Rauh & Backeberg) Ostolaza Estos registros se unifican bajo Haageocereus acranthus subsp. olowinskianus. Haageocereus pseudomelanostele subsp. setosus forma longicomus (Akers) Ostolaza pasa ser sinónimo de la especie Haageocereus multangularis. 5.- La información taxonómica de las siguientes especies se conserva respecto del listado original, debido que se cuenta con suficiente información para la determinación des estado de identificación. Corryocactus quadrangularis Epidendrum pardothyrsus Myrosmodes paludosum Prosthechea cyperifolia Stanhopea haselowiana 6.- Se tiene incluido en el listado un el genero Ligeophila.","code":"#> # A tibble: 20 × 2 #>    listed_name              correct_name             #>    <chr>                    <chr>                    #>  1 Ascidiogine wurdackii    Ascidiogyne wurdackii    #>  2 Proboscidea altheaefolia Proboscidea althaeifolia #>  3 Jaltomata mioneii        Jaltomata mionei         #>  4 Larnax macrocalix        Larnax macrocalyx        #>  5 Larnax sagastegui        Larnax sagasteguii       #>  6 Solanum chuquidenum      Solanum chiquidenum      #>  7 Mutisia wurdacki         Mutisia wurdackii        #>  8 Peltogyne altisima       Peltogyne altissima      #>  9 Solanum huancabambese    Solanum huancabambense   #> 10 Salvia opossitiflora     Salvia oppositiflora     #> 11 Ligeophila spp.          Ligeophila               #> 12 Masdevallia zebraceae    Masdevallia zebracea     #> 13 Telipogon alegria        Telipogon alegriae       #> 14 Aspasia psitticina       Aspasia psittacina       #> 15 Gongora quinquinervis    Gongora quinquenervis    #> 16 Maxillaria rotumdilabia  Maxillaria rotundilabia  #> 17 Mormodes revolutum       Mormodes revoluta        #> 18 Mormodes rolfeanum       Mormodes rolfeana        #> 19 Trichopilia fragans      Trichopilia fragrans     #> 20 Trichopilia juninense    Trichopilia juninensis #> # A tibble: 10 × 2 #>    species_name                      accepted_name        #>    <chr>                             <chr>                #>  1 Ceroxylon crispum                 Ceroxylon vogelianum #>  2 Ceroxylum verriculosum            Ceroxylon vogelianum #>  3 Comparettia coccinea              Comparettia coccinea #>  4 Comparettia peruviana             Comparettia coccinea #>  5 Geonoma undata                    Geonoma undata       #>  6 Geonoma weberbaueri               Geonoma undata       #>  7 Lycaste ciliata                   Lycaste ciliata      #>  8 Lycaste fimbriata                 Lycaste ciliata      #>  9 Mila caespitosa subsp. caespitosa Mila caespitosa      #> 10 Mila caespitosa subsp. densiseta  Mila caespitosa"},{"path":"https://paulesantos.github.io/peruflorads43/index.html","id":"como-usar-peruflorads43","dir":"","previous_headings":"","what":"Como usar peruflorads43","title":"Check Threatened Plant Species Status Against Peru's DS 043-2006-AG","text":"search_ds043 esta fucnion puede ser empleada con un vector o data.frame: category_ds043_2006() permite la identificación de la categoría en la cual esta incorporada la especie.","code":"library(peruflorads43) #> This is peruflorads043_2006_ag 0.1.1 # vector splist <- c(\"Cleistocactus clavispinus\",               \"Welfia alfredi\",               \"Matucana hayneii\") search_ds043(splist = splist) #> [1] \"Present\"        \"\"               \"P_updated_name\"  # data.frame  df <- data.frame(splist = splist) df #>                      splist #> 1 Cleistocactus clavispinus #> 2            Welfia alfredi #> 3          Matucana hayneii  df$ds_043_2006 <- search_ds043(df$splist) df #>                      splist    ds_043_2006 #> 1 Cleistocactus clavispinus        Present #> 2            Welfia alfredi                #> 3          Matucana hayneii P_updated_name # tidyverse - tibble df <- tibble::tibble(splist = splist) df |>    dplyr::mutate(ds_043_2006 = search_ds043(splist)) #> # A tibble: 3 × 2 #>   splist                    ds_043_2006      #>   <chr>                     <chr>            #> 1 Cleistocactus clavispinus \"Present\"        #> 2 Welfia alfredi            \"\"               #> 3 Matucana hayneii          \"P_updated_name\" category_ds043_2006(splist = splist) #>              name_submitted           category             accepted_name #> 1 Cleistocactus clavispinus En peligro critico Cleistocactus clavispinus #> 2            Welfia alfredi               <NA>                      <NA> #> 3          Matucana hayneii         Vulnerable           Matucana haynei #>   accepted_family #> 1       Cactaceae #> 2            <NA> #> 3       Cactaceae"},{"path":"https://paulesantos.github.io/peruflorads43/reference/check_ds043.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplified wrapper for consolidated matching — check_ds043","title":"Simplified wrapper for consolidated matching — check_ds043","text":"Simplified interface checking DS 043-2006-AG status automatic consolidation original updated nomenclature.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/check_ds043.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplified wrapper for consolidated matching — check_ds043","text":"","code":"check_ds043(splist, return_simple = FALSE)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/check_ds043.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplified wrapper for consolidated matching — check_ds043","text":"splist Character vector species names return_simple Logical. TRUE, returns \"Protected\" \"protected\"","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/check_ds043.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplified wrapper for consolidated matching — check_ds043","text":"Character vector protection status","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/check_ds043.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplified wrapper for consolidated matching — check_ds043","text":"","code":"if (FALSE) { # \\dontrun{ species <- c(\"Brassia ocanensis\", \"Persea americana\") check_ds043(species) } # }"},{"path":"https://paulesantos.github.io/peruflorads43/reference/comparison_table_ds043.html","id":null,"dir":"Reference","previous_headings":"","what":"Create comparison table between original and updated results — comparison_table_ds043","title":"Create comparison table between original and updated results — comparison_table_ds043","text":"Creates side--side comparison table useful understanding nomenclatural changes impact DS 043-2006-AG status.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/comparison_table_ds043.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create comparison table between original and updated results — comparison_table_ds043","text":"","code":"comparison_table_ds043(splist)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/comparison_table_ds043.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create comparison table between original and updated results — comparison_table_ds043","text":"splist Character vector species names","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/comparison_table_ds043.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create comparison table between original and updated results — comparison_table_ds043","text":"Tibble comparison","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Direct Match Species Names — direct_match","title":"Direct Match Species Names — direct_match","text":"Performs direct matching species names threatened species database. Matches binomial names (genus + species), trinomial names (+ infraspecies level 1), quaternomial names (+ infraspecies level 2) applicable.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Direct Match Species Names — direct_match","text":"","code":"direct_match(df, target_df = NULL, source = \"original\")"},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Direct Match Species Names — direct_match","text":"df tibble containing species data matched. target_df tibble representing threatened species database containing reference list threatened species. source Character string specifying database version use. Options : \"original\" (default): Uses original threatened species database \"updated\": Uses updated database synonyms","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Direct Match Species Names — direct_match","text":"tibble additional logical column `direct_match` indicating whether name successfully matched (`TRUE`) (`FALSE`).","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_infra_rank_within_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Direct Match Infraspecific Rank within Species — direct_match_infra_rank_within_species","title":"Direct Match Infraspecific Rank within Species — direct_match_infra_rank_within_species","text":"Performs direct matching infraspecific rank (VAR., SUBSP., F., etc.) within already matched species. prerequisite fuzzy matching infraspecific epithet, rank category must match exactly.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_infra_rank_within_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Direct Match Infraspecific Rank within Species — direct_match_infra_rank_within_species","text":"","code":"direct_match_infra_rank_within_species(   df,   target_df = NULL,   source = \"original\" )"},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_infra_rank_within_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Direct Match Infraspecific Rank within Species — direct_match_infra_rank_within_species","text":"df tibble containing species data matched. target_df tibble representing threatened species database. source Character string specifying database version use. Options : \"original\" (default): Uses original threatened species database \"updated\": Uses updated database synonyms","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_infra_rank_within_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Direct Match Infraspecific Rank within Species — direct_match_infra_rank_within_species","text":"tibble additional logical column `direct_match_infra_rank` indicating whether infraspecific rank successfully matched (`TRUE`) (`FALSE`).","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_infra_rank_within_species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Direct Match Infraspecific Rank within Species — direct_match_infra_rank_within_species","text":"function ensures infraspecific category (e.g., VAR., SUBSP., F.) matches exactly attempting fuzzy matching infraspecific epithet. prevents inappropriate matches like \"var. alba\" matching \"subsp. alba\" , despite similar epithets, taxonomically different entities. function automatically uses correct column name based use_infraspecies_2: - TRUE: Uses 'tag' column (original DS 043-2006-AG database) - FALSE: Uses 'tag_acc' column (updated nomenclature database)","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_infra_rank_within_species_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper: Direct Match Infraspecific Rank within Species — direct_match_infra_rank_within_species_helper","title":"Helper: Direct Match Infraspecific Rank within Species — direct_match_infra_rank_within_species_helper","text":"Helper function performs actual matching infraspecific ranks single matched species. Automatically handles original updated databases using appropriate column name (tag tag_acc).","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_infra_rank_within_species_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper: Direct Match Infraspecific Rank within Species — direct_match_infra_rank_within_species_helper","text":"","code":"direct_match_infra_rank_within_species_helper(   df,   target_df,   source = \"original\" )"},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_infra_rank_within_species_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper: Direct Match Infraspecific Rank within Species — direct_match_infra_rank_within_species_helper","text":"df tibble containing data single matched species. target_df tibble representing threatened species database. source Character string specifying database version use. Options : \"original\" (default): Uses original threatened species database \"updated\": Uses updated database synonyms","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_infra_rank_within_species_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper: Direct Match Infraspecific Rank within Species — direct_match_infra_rank_within_species_helper","text":"tibble match results logical indicator.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_infra_rank_within_species_helper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper: Direct Match Infraspecific Rank within Species — direct_match_infra_rank_within_species_helper","text":"function performs following steps: 1. Determines column use based use_infraspecies_2 2. Extracts infraspecific ranks database matched species 3. Standardizes rank names uppercase 4. Performs exact matching rank category 5. Returns matched unmatched records boolean indicator","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_species_within_genus_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Direct Match Species within Genus — direct_match_species_within_genus_helper","title":"Direct Match Species within Genus — direct_match_species_within_genus_helper","text":"function performs direct match specific epithets within already matched genus list threatened species database.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_species_within_genus_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Direct Match Species within Genus — direct_match_species_within_genus_helper","text":"","code":"direct_match_species_within_genus_helper(df, target_df)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_species_within_genus_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Direct Match Species within Genus — direct_match_species_within_genus_helper","text":"df tibble containing species data matched. target_df tibble representing threatened species database containing reference list threatened species.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/direct_match_species_within_genus_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Direct Match Species within Genus — direct_match_species_within_genus_helper","text":"tibble additional logical column indicating whether specific epithet successfully matched within matched genus (`TRUE`) (`FALSE`).","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-backup_ambiguous_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Backup Ambiguous Match Attributes — .backup_ambiguous_attrs","title":"Backup Ambiguous Match Attributes — .backup_ambiguous_attrs","text":"Extracts consolidates ambiguous match attributes multiple objects. prevents attribute loss dplyr transformations.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-backup_ambiguous_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backup Ambiguous Match Attributes — .backup_ambiguous_attrs","text":"","code":".backup_ambiguous_attrs(...)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-backup_ambiguous_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backup Ambiguous Match Attributes — .backup_ambiguous_attrs","text":"... One data frames tibbles may contain ambiguous match attributes","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-backup_ambiguous_attrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backup Ambiguous Match Attributes — .backup_ambiguous_attrs","text":"named list consolidated ambiguous match attributes: genera Tibble ambiguous genus matches species Tibble ambiguous species matches infraspecies Tibble ambiguous infraspecies level 1 matches infraspecies_2 Tibble ambiguous infraspecies level 2 matches","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-consolidate_ambiguous_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Consolidate Ambiguous Match Attributes — .consolidate_ambiguous_attrs","title":"Consolidate Ambiguous Match Attributes — .consolidate_ambiguous_attrs","text":"Collects ambiguous match attributes intermediate pipeline results attaches final output. ensures ambiguous match information created fuzzy matching preserved transformations available user via get_ambiguous_matches().","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-consolidate_ambiguous_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consolidate Ambiguous Match Attributes — .consolidate_ambiguous_attrs","text":"","code":".consolidate_ambiguous_attrs(output_f, pipe_1_5, infra_out)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-consolidate_ambiguous_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consolidate Ambiguous Match Attributes — .consolidate_ambiguous_attrs","text":"output_f Final output tibble matching pipeline pipe_1_5 List containing results nodes 1-5 (genus/species matching) infra_out List containing results nodes 6-7 (infraspecies matching)","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-consolidate_ambiguous_attrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consolidate Ambiguous Match Attributes — .consolidate_ambiguous_attrs","text":"output_f attached ambiguous match attributes:   - attr(*, \"ambiguous_genera\")   - attr(*, \"ambiguous_species\")   - attr(*, \"ambiguous_infraspecies\")","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-consolidate_ambiguous_attrs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Consolidate Ambiguous Match Attributes — .consolidate_ambiguous_attrs","text":"function solves problem attributes lost dplyr transformations (left_join, mutate, bind_rows, etc.). retrieves attributes created earlier stages pipeline re-attaches final output.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-final_assertions.html","id":null,"dir":"Reference","previous_headings":"","what":"Final Validation of Matching Results — .final_assertions","title":"Final Validation of Matching Results — .final_assertions","text":"Validates output maintains integrity original input, including proper handling duplicate names.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-final_assertions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Final Validation of Matching Results — .final_assertions","text":"","code":".final_assertions(splist_class, output_f)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-final_assertions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Final Validation of Matching Results — .final_assertions","text":"splist_class Tibble. Original classified species list output_f Tibble. Final formatted output","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-final_assertions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Final Validation of Matching Results — .final_assertions","text":"Invisible TRUE checks pass, otherwise throws error","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-restore_ambiguous_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore Ambiguous Match Attributes — .restore_ambiguous_attrs","title":"Restore Ambiguous Match Attributes — .restore_ambiguous_attrs","text":"Attaches previously backed-ambiguous match attributes tibble.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-restore_ambiguous_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore Ambiguous Match Attributes — .restore_ambiguous_attrs","text":"","code":".restore_ambiguous_attrs(tbl, backup)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-restore_ambiguous_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore Ambiguous Match Attributes — .restore_ambiguous_attrs","text":"tbl tibble attributes attached backup named list ambiguous match attributes (output `.backup_ambiguous_attrs()`)","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/dot-restore_ambiguous_attrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restore Ambiguous Match Attributes — .restore_ambiguous_attrs","text":"input tibble ambiguous match attributes attached","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_genus.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Match Genus Name — fuzzy_match_genus","title":"Fuzzy Match Genus Name — fuzzy_match_genus","text":"function performs fuzzy match genus names threatened species database using fuzzyjoin::stringdist() account slight variations spelling.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_genus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Match Genus Name — fuzzy_match_genus","text":"","code":"fuzzy_match_genus(df, target_df = NULL)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_genus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Match Genus Name — fuzzy_match_genus","text":"df tibble containing genus names matched. target_df tibble representing threatened species database containing reference list threatened species.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_genus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Match Genus Name — fuzzy_match_genus","text":"tibble two additional columns: - fuzzy_match_genus: logical column indicating whether genus   successfully matched (`TRUE`) (`FALSE`). - fuzzy_genus_dist: numeric column representing distance match.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_genus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fuzzy Match Genus Name — fuzzy_match_genus","text":"multiple genera match string distance (ambiguous matches), warning issued first match automatically selected. examine ambiguous matches detail, use get_ambiguous_matches result object. **IMPROVED**: Ambiguous match attributes now include database information family representative species better manual curation.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_infraspecies2_within_infraspecies.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Match Infraspecies Level 2 within Infraspecies Level 1 — fuzzy_match_infraspecies2_within_infraspecies","title":"Fuzzy Match Infraspecies Level 2 within Infraspecies Level 1 — fuzzy_match_infraspecies2_within_infraspecies","text":"Fuzzy Match Infraspecies Level 2 within Infraspecies Level 1","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_infraspecies2_within_infraspecies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Match Infraspecies Level 2 within Infraspecies Level 1 — fuzzy_match_infraspecies2_within_infraspecies","text":"","code":"fuzzy_match_infraspecies2_within_infraspecies(df, target_df = NULL)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_infraspecies2_within_infraspecies_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for fuzzy matching infraspecies level 2 — fuzzy_match_infraspecies2_within_infraspecies_helper","title":"Helper function for fuzzy matching infraspecies level 2 — fuzzy_match_infraspecies2_within_infraspecies_helper","text":"Helper function fuzzy matching infraspecies level 2","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_infraspecies2_within_infraspecies_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for fuzzy matching infraspecies level 2 — fuzzy_match_infraspecies2_within_infraspecies_helper","text":"","code":"fuzzy_match_infraspecies2_within_infraspecies_helper(df, target_df)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_infraspecies_within_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Match Infraspecific Epithet within Species — fuzzy_match_infraspecies_within_species","title":"Fuzzy Match Infraspecific Epithet within Species — fuzzy_match_infraspecies_within_species","text":"Fuzzy Match Infraspecific Epithet within Species","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_infraspecies_within_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Match Infraspecific Epithet within Species — fuzzy_match_infraspecies_within_species","text":"","code":"fuzzy_match_infraspecies_within_species(   df,   target_df = NULL,   source = \"original\" )"},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_infraspecies_within_species_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper: Fuzzy Match Infraspecific Epithet within Species (IMPROVED) — fuzzy_match_infraspecies_within_species_helper","title":"Helper: Fuzzy Match Infraspecific Epithet within Species (IMPROVED) — fuzzy_match_infraspecies_within_species_helper","text":"Helper: Fuzzy Match Infraspecific Epithet within Species (IMPROVED)","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_infraspecies_within_species_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper: Fuzzy Match Infraspecific Epithet within Species (IMPROVED) — fuzzy_match_infraspecies_within_species_helper","text":"","code":"fuzzy_match_infraspecies_within_species_helper(   df,   target_df,   source = \"original\" )"},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_species_within_genus.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Match Species within Genus — fuzzy_match_species_within_genus","title":"Fuzzy Match Species within Genus — fuzzy_match_species_within_genus","text":"function attempts fuzzy match species names within genus threatened species database using fuzzyjoin::stringdist fuzzy matching.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_species_within_genus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Match Species within Genus — fuzzy_match_species_within_genus","text":"","code":"fuzzy_match_species_within_genus(df, target_df = NULL)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_species_within_genus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuzzy Match Species within Genus — fuzzy_match_species_within_genus","text":"df tibble containing species data matched. target_df tibble representing threatened species database containing reference list threatened species.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_species_within_genus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuzzy Match Species within Genus — fuzzy_match_species_within_genus","text":"tibble additional logical column fuzzy_match_species_within_genus, indicating whether specific epithet successfully fuzzy matched within matched genus (`TRUE`) (`FALSE`).","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_species_within_genus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fuzzy Match Species within Genus — fuzzy_match_species_within_genus","text":"multiple species match string distance (ambiguous matches), warning issued first match automatically selected. examine ambiguous matches detail, use get_ambiguous_matches result object type = \"species\". **IMPROVED**: Ambiguous match attributes now include threat category accepted names better decision-making.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_species_within_genus_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuzzy Match Species within Genus - Helper — fuzzy_match_species_within_genus_helper","title":"Fuzzy Match Species within Genus - Helper — fuzzy_match_species_within_genus_helper","text":"Fuzzy Match Species within Genus - Helper","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/fuzzy_match_species_within_genus_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuzzy Match Species within Genus - Helper — fuzzy_match_species_within_genus_helper","text":"","code":"fuzzy_match_species_within_genus_helper(df, target_df)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/genus_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Genus Name — genus_match","title":"Match Genus Name — genus_match","text":"function performs direct match genus names genus names listed threatened species database.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/genus_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Genus Name — genus_match","text":"","code":"genus_match(df, target_df = NULL)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/genus_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Genus Name — genus_match","text":"df tibble containing genus names matched. target_df tibble representing threatened species database containing reference list threatened species.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/genus_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Genus Name — genus_match","text":"tibble additional logical column genus_match indicating whether genus successfully matched (`TRUE`) (`FALSE`).","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_ambiguous_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Ambiguous Match Information — get_ambiguous_matches","title":"Retrieve Ambiguous Match Information — get_ambiguous_matches","text":"Extracts information ambiguous matches (multiple candidates tied distances) matching results. useful quality control manual curation uncertain matches.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_ambiguous_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Ambiguous Match Information — get_ambiguous_matches","text":"","code":"get_ambiguous_matches(   match_result,   type = c(\"genus\", \"species\", \"infraspecies\", \"all\"),   save_to_file = FALSE,   output_dir = tempdir() )"},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_ambiguous_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Ambiguous Match Information — get_ambiguous_matches","text":"match_result tibble returned matching functions matching_threatenedperu internal matching functions. type Character. Type ambiguous matches retrieve: \"genus\" (default): Ambiguous genus-level matches \"species\": Ambiguous species-level matches \"infraspecies\": Ambiguous infraspecies-level matches (includes level 2) \"\": types ambiguous matches save_to_file Logical. TRUE, saves results CSV file. Default FALSE (CRAN compliant - automatic file writing). output_dir Character. Directory save file save_to_file = TRUE. Defaults tempdir() safe file operations.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_ambiguous_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Ambiguous Match Information — get_ambiguous_matches","text":"tibble ambiguous match details, NULL ambiguous matches exist. Columns depend match type typically include original names, matched names, distance metrics.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_ambiguous_matches.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve Ambiguous Match Information — get_ambiguous_matches","text":"fuzzy matching, multiple candidates may identical string distances, making choice match ambiguous. matching algorithm automatically selects first candidate, function allows : Review ambiguous matches quality control Export manual curation Make informed decisions match quality","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_ambiguous_matches.html","id":"file-output","dir":"Reference","previous_headings":"","what":"File Output","title":"Retrieve Ambiguous Match Information — get_ambiguous_matches","text":"save_to_file = TRUE, timestamped CSV file created: Filename format: \"threatenedperu_ambiguous_[type]_[timestamp].csv\" Location: output_dir (defaults tempdir()) Contains ambiguous matches metadata","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_database_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Database Summary Statistics — get_database_summary","title":"Get Database Summary Statistics — get_database_summary","text":"Provides summary statistics threatened species databases.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_database_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Database Summary Statistics — get_database_summary","text":"","code":"get_database_summary(type = c(\"both\", \"original\", \"updated\"))"},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_database_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Database Summary Statistics — get_database_summary","text":"type Character string: \"original\", \"updated\", \"\" (default).","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_database_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Database Summary Statistics — get_database_summary","text":"tibble summary statistics.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_database_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Database Summary Statistics — get_database_summary","text":"","code":"# \\donttest{ # Get summary of both databases summary_stats <- get_database_summary() print(summary_stats) #> # A tibble: 2 × 10 #>   Database        Total_Species    CR    EN    VU    NT Families Genera #>   <chr>                   <int> <int> <int> <int> <int>    <int>  <int> #> 1 Original (2006)           776   193    73   391   119       80    290 #> 2 Updated                   179    44    16    93    26       30     85 #> # ℹ 2 more variables: Has_Infraspecies <int>, Max_Rank <dbl>  # Get summary of just the original summary_original <- get_database_summary(\"original\") print(summary_original) #> # A tibble: 1 × 10 #>   Database Total_Species    CR    EN    VU    NT Families Genera #>   <chr>            <int> <int> <int> <int> <int>    <int>  <int> #> 1 original           776   193    73   391   119       80    290 #> # ℹ 2 more variables: Has_Infraspecies <int>, Max_Rank <dbl> # }"},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_threatened_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Threatened Species Database — get_threatened_database","title":"Get Threatened Species Database — get_threatened_database","text":"Retrieves threatened plant species database Peru. function provides controlled access internal datasets used package.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_threatened_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Threatened Species Database — get_threatened_database","text":"","code":"get_threatened_database(type = c(\"original\", \"updated\"))"},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_threatened_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Threatened Species Database — get_threatened_database","text":"type Character string specifying database version retrieve. Options : \"original\" (default): Original nomenclature DS 043-2006-AG (2006) \"updated\": Updated nomenclature current taxonomic consensus","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_threatened_database.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Threatened Species Database — get_threatened_database","text":"tibble containing threatened species database.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_threatened_database.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get Threatened Species Database — get_threatened_database","text":"function primarily advanced users need direct access database structure. use cases, use higher-level functions: is_threatened_peru is_ds043_2006_ag.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_threatened_database.html","id":"database-structure","dir":"Reference","previous_headings":"","what":"Database Structure","title":"Get Threatened Species Database — get_threatened_database","text":"**Original Database** (type = \"original\"): ~777 species listed DS 043-2006-AG Supports quaternomial names (Rank 4) Includes accepted names synonyms Columns: scientific_name, genus, species, tag, infraspecies,     tag_2, infraspecies_2, threat_category, accepted_name_author,     taxonomic_status, accepted_name, family, protected_ds_043 **Updated Database** (type = \"updated\"): Updated nomenclature using WCVP POWO Supports trinomial names (Rank 3 maximum) accepted names (synonyms resolved) Columns: scientific_name, genus, species, tag_acc, infraspecies,     threat_category, accepted_name_author, taxonomic_status,     accepted_name, family, protected_ds_043","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_threatened_database.html","id":"threat-categories","dir":"Reference","previous_headings":"","what":"Threat Categories","title":"Get Threatened Species Database — get_threatened_database","text":"CR Critically Endangered EN Endangered VU Vulnerable NT Near Threatened","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_threatened_database.html","id":"legal-context","dir":"Reference","previous_headings":"","what":"Legal Context","title":"Get Threatened Species Database — get_threatened_database","text":"Data based Supreme Decree DS 043-2006-AG, Ministry Agriculture, Peru (July 13, 2006), establishes official list threatened wild flora species Peru.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/peruflorads43/reference/get_threatened_database.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Threatened Species Database — get_threatened_database","text":"","code":"# \\donttest{ # Get original database db_original <- get_threatened_database(type = \"original\") str(db_original) #> tibble [776 × 13] (S3: tbl_df/tbl/data.frame) #>  $ scientific_name     : chr [1:776] \"Aphelandra cuscoensis\" \"Aphelandra formosa\" \"Aphelandra wurdackii\" \"Tetramerium sagasteguianum\" ... #>  $ author              : chr [1:776] \"Wasshausen\" \"(Humboldt & Bonpland) Ness\" \"Wassh\" \"T.F Daniel\" ... #>  $ family              : chr [1:776] \"Acanthaceae\" \"Acanthaceae\" \"Acanthaceae\" \"Acanthaceae\" ... #>  $ tag                 : chr [1:776] NA NA NA NA ... #>  $ infraspecies_2      : chr [1:776] NA NA NA NA ... #>  $ accepted_name       : chr [1:776] \"Aphelandra cuscoensis\" \"Aphelandra formosa\" \"Aphelandra wurdackii\" \"Tetramerium sagasteguianum\" ... #>  $ accepted_name_author: chr [1:776] \"Wassh.\" \"(Bonpl.) Nees\" \"Wassh.\" \"T.F.Daniel\" ... #>  $ accepted_family     : chr [1:776] \"Acanthaceae\" \"Acanthaceae\" \"Acanthaceae\" \"Acanthaceae\" ... #>  $ taxonomic_status    : chr [1:776] \"Accepted\" \"Accepted\" \"Accepted\" \"Accepted\" ... #>  $ threat_category     : chr [1:776] \"CR\" \"CR\" \"CR\" \"CR\" ... #>  $ genus               : chr [1:776] \"APHELANDRA\" \"APHELANDRA\" \"APHELANDRA\" \"TETRAMERIUM\" ... #>  $ species             : chr [1:776] \"CUSCOENSIS\" \"FORMOSA\" \"WURDACKII\" \"SAGASTEGUIANUM\" ... #>  $ infraspecies        : chr [1:776] NA NA NA NA ... nrow(db_original) #> [1] 776  # Get updated database db_updated <- get_threatened_database(type = \"updated\") str(db_updated) #> tibble [179 × 14] (S3: tbl_df/tbl/data.frame) #>  $ scientific_name     : chr [1:179] \"Pucara leucantha\" \"Ceroxylon weberbaueri\" \"Dyssodia lopez-mirandae\" \"Senecio mollendoensis\" ... #>  $ author              : chr [1:179] \"Ravenna\" \"Burret\" \"Cabrera\" \"Cabrera\" ... #>  $ family              : chr [1:179] \"Amaryllidaceae\" \"Arecaceae\" \"Asteraceae\" \"Asteraceae\" ... #>  $ tag                 : chr [1:179] NA NA NA NA ... #>  $ form                : chr [1:179] NA NA NA NA ... #>  $ accepted_name       : chr [1:179] \"Stenomesson leucanthum\" \"Ceroxylon pityrophyllum\" \"Schizotrichia lopez-mirandae\" \"Lomanthus mollendoensis\" ... #>  $ accepted_name_author: chr [1:179] \"(Ravenna) Meerow & van der Werff\" \"(Mart.) Mart. ex H.Wendl.\" \"(Cabrera) Molinari\" \"(Cabrera) B.Nord.\" ... #>  $ accepted_family     : chr [1:179] \"Amaryllidaceae\" \"Arecaceae\" \"Asteraceae\" \"Asteraceae\" ... #>  $ taxonomic_status    : chr [1:179] \"Synonym\" \"Synonym\" \"Synonym\" \"Synonym\" ... #>  $ threat_category     : chr [1:179] \"CR\" \"CR\" \"CR\" \"CR\" ... #>  $ genus               : chr [1:179] \"STENOMESSON\" \"CEROXYLON\" \"SCHIZOTRICHIA\" \"LOMANTHUS\" ... #>  $ species             : chr [1:179] \"LEUCANTHUM\" \"PITYROPHYLLUM\" \"LOPEZ-MIRANDAE\" \"MOLLENDOENSIS\" ... #>  $ tag_acc             : chr [1:179] NA NA NA NA ... #>  $ infraspecies        : chr [1:179] NA NA NA NA ...  # Compare number of species n_original <- nrow(db_original) n_updated <- nrow(db_updated) cat(\"Original:\", n_original, \"| Updated:\", n_updated, \"\\n\") #> Original: 776 | Updated: 179   # Count by threat category table(db_original$threat_category) #>  #>  CR  EN  NT  VU  #> 193  73 119 391   # Find critically endangered orchids orchids <- db_original[db_original$family == \"ORCHIDACEAE\" &                        db_original$threat_category == \"CR\", ] head(orchids$scientific_name) #> character(0) # }"},{"path":"https://paulesantos.github.io/peruflorads43/reference/is_ds043_2006_ag.html","id":null,"dir":"Reference","previous_headings":"","what":"Matching for DS 043-2006-AG Species — is_ds043_2006_ag","title":"Matching for DS 043-2006-AG Species — is_ds043_2006_ag","text":"Performs consolidated matching searches species names original DS 043-2006-AG list (2006 names) updated nomenclature database. ensures users updated names can still identify species protected DS 043-2006-AG, even nomenclature updated.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/is_ds043_2006_ag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matching for DS 043-2006-AG Species — is_ds043_2006_ag","text":"","code":"is_ds043_2006_ag(splist, prioritize = \"original\", return_details = FALSE)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/is_ds043_2006_ag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matching for DS 043-2006-AG Species — is_ds043_2006_ag","text":"splist Character vector species names check prioritize Character. result prioritize databases match: \"original\" (default) \"updated\" return_details Logical. Return detailed matching information","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/is_ds043_2006_ag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matching for DS 043-2006-AG Species — is_ds043_2006_ag","text":"return_details = FALSE: Character vector consolidated threat status. return_details = TRUE: Tibble detailed reconciliation information.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/is_ds043_2006_ag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Matching for DS 043-2006-AG Species — is_ds043_2006_ag","text":"function performs two-stage search: 1. Searches original DS 043-2006-AG (names listed 2006) 2. Searches updated nomenclature database (current accepted names) 3. Consolidates results clear indication database provided match 4. Identifies original names now synonyms approach handles cases : - User provides original name 2006: Found original database - User provides updated name: Found updated database linked DS 043-2006-AG list - Name matches : Returns relevant result based priority - Original name now synonym: Indicated \"(synonym)\" marker","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/is_ds043_2006_ag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matching for DS 043-2006-AG Species — is_ds043_2006_ag","text":"","code":"if (FALSE) { # \\dontrun{ # Species with nomenclatural changes species <- c(   \"Haageocereus acranthus subsp. olowinskianus\",  # Original name   \"Brassia ocanensis\",                            # Updated name (was Ada)   \"Ida locusta\",                                  # Updated name   \"Lycaste locusta\",                              # Now a synonym   \"Persea americana\"                              # Not threatened )  # Get consolidated status status <- is_ds043_2006_ag(species)  # Get detailed information details <- is_ds043_2006_ag(species, return_details = TRUE) View(details) } # }"},{"path":"https://paulesantos.github.io/peruflorads43/reference/is_threatened_peru.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if species are threatened listed in DS 043-2006-AG Peru — is_threatened_peru","title":"Check if species are threatened listed in DS 043-2006-AG Peru — is_threatened_peru","text":"function checks list species names threatened according Peruvian threatened species database. function allows fuzzy matching species names maximum distance threshold handle potential typos variations species names.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/is_threatened_peru.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if species are threatened listed in DS 043-2006-AG Peru — is_threatened_peru","text":"","code":"is_threatened_peru(splist, source = \"original\", return_details = FALSE)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/is_threatened_peru.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if species are threatened listed in DS 043-2006-AG Peru — is_threatened_peru","text":"splist character vector containing list species names checked threatened status Peru. source Character string specifying database version use. Options : \"original\" (default): Uses original threatened species database \"updated\": Uses updated database synonyms return_details Logical. TRUE, returns detailed matching results. FALSE (default), returns threat status vector.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/is_threatened_peru.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if species are threatened listed in DS 043-2006-AG Peru — is_threatened_peru","text":"return_details = FALSE: character vector indicating threat status species (\"threatened\", \"Threatened - CR\", \"Threatened - EN\", \"Threatened - VU\", \"Threatened - NT\", \"Threatened - Unknown category\"). return_details = TRUE: tibble detailed matching results including matched names, threat categories, matching process information.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/is_threatened_peru.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if species are threatened listed in DS 043-2006-AG Peru — is_threatened_peru","text":"","code":"# \\donttest{ # Example 1: Basic usage with valid species names species_list <- c(\"Cattleya maxima\", \"Polylepis incana\", \"Fake species\")  # Simple status check threat_status <- tryCatch(   is_threatened_peru(species_list),   error = function(e) {     message(\"Error in matching: \", e$message)     rep(\"Error\", length(species_list))   } ) print(threat_status) #> [1] \"CR\"             \"CR\"             \"Not threatened\"  # Example 2: Detailed results detailed_results <- tryCatch(   is_threatened_peru(species_list, return_details = TRUE),   error = function(e) {     message(\"Error in detailed matching: \", e$message)     NULL   } ) if (!is.null(detailed_results)) {   print(detailed_results) } #> # A tibble: 3 × 41 #>   Original.Index Orig.Name        sorter Matched.Name     Threat.Status  Author #>            <int> <chr>             <int> <chr>            <chr>          <chr>  #> 1              1 Cattleya maxima       1 Cattleya maxima  CR             \"\"     #> 2              2 Polylepis incana      2 Polylepis incana CR             \"\"     #> 3              3 Fake species          3 ---              Not threatened \"\"     #> # ℹ 35 more variables: accepted_name_author <chr>, Matched.Rank <int>, #> #   Comp.Rank <lgl>, Match.Level <chr>, Orig.Genus <chr>, Orig.Species <chr>, #> #   Orig.Infraspecies <chr>, Orig.Infraspecies_2 <chr>, Rank <int>, #> #   Orig.Infra.Rank <chr>, Orig.Infra.Rank_2 <chr>, matched <lgl>, #> #   direct_match <lgl>, Matched.Genus <chr>, Matched.Species <chr>, #> #   Matched.Infra.Rank <chr>, Matched.Infraspecies <chr>, #> #   Matched.Infra.Rank_2 <chr>, Matched.Infraspecies_2 <chr>, …  # Example 3: Handling NA values gracefully species_with_na <- c(\"Cattleya maxima\", NA, \"Polylepis incana\") status_with_na <- is_threatened_peru(species_with_na) #> 1 species name was empty or NA and will be treated as 'Not threatened' print(status_with_na) #> [1] \"CR\"             \"Not threatened\" \"CR\"              # Example 4: Empty input handling empty_result <- is_threatened_peru(character(0)) #> Warning: Empty species list provided print(empty_result)  # Should return character(0) #> character(0)  # Example 5: Using updated database updated_results <- tryCatch(   is_threatened_peru(species_list, source = \"updated\"),   error = function(e) {     message(\"Error with updated database: \", e$message)     rep(\"Error\", length(species_list))   } ) print(updated_results) #> [1] \"Not threatened\" \"Not threatened\" \"Not threatened\" # }"},{"path":"https://paulesantos.github.io/peruflorads43/reference/map_dfr_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Map with optional progress bar — map_dfr_progress","title":"Map with optional progress bar — map_dfr_progress","text":"Internal wrapper purrr::map_dfr optional progress tracking. Progress bars shown interactive sessions.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/map_dfr_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map with optional progress bar — map_dfr_progress","text":"","code":"map_dfr_progress(.x, .f, ..., .id = NULL, .progress = interactive())"},{"path":"https://paulesantos.github.io/peruflorads43/reference/map_dfr_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map with optional progress bar — map_dfr_progress","text":".x list vector iterate .f function apply ... Additional arguments passed .f .id Column name row identification .progress Logical. Show progress bar? Default interactive()","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/matching_threatenedperu.html","id":null,"dir":"Reference","previous_headings":"","what":"Match Species Names to Threatened Plant List of Peru — matching_threatenedperu","title":"Match Species Names to Threatened Plant List of Peru — matching_threatenedperu","text":"function matches given species names internal database threatened plant species Peru. uses hierarchical matching strategy includes direct matching, genus-level matching, fuzzy matching, suffix matching maximize successful matches maintaining accuracy.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/matching_threatenedperu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match Species Names to Threatened Plant List of Peru — matching_threatenedperu","text":"","code":"matching_threatenedperu(   splist,   source = c(\"original\", \"updated\"),   quiet = TRUE )"},{"path":"https://paulesantos.github.io/peruflorads43/reference/matching_threatenedperu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match Species Names to Threatened Plant List of Peru — matching_threatenedperu","text":"splist character vector containing species names matched. Can include duplicate names - results expanded match input. source Character string specifying database version use. Options : \"original\" (default): Uses original threatened species     database support Rank 4 (quaternomial names) \"updated\": Uses updated database current     nomenclature, supporting Rank 3 (trinomial names) quiet Logical, default TRUE. FALSE, prints informative messages.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/matching_threatenedperu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match Species Names to Threatened Plant List of Peru — matching_threatenedperu","text":"tibble detailed matching results including: sorter Integer. Original position input vector Orig.Name Character. Original input name (standardized) Matched.Name Character. Matched name database \"—\" Threat.Status Character. IUCN threat category \"threatened\" Rank Integer. Input taxonomic rank (1-4) Matched.Rank Integer. Matched taxonomic rank Comp.Rank Logical. Whether ranks match exactly Match.Level Character. Description match quality matched Logical. Whether match found","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/matching_threatenedperu.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Match Species Names to Threatened Plant List of Peru — matching_threatenedperu","text":"**Duplicate Handling:** input contains duplicate names, function automatically: Detects duplicates creates tracking column (sorters) Processes unique names (efficient matching) Expands results restore original positions Preserves original input order via sorter column duplicate handling uses `sorters` column concatenates original sorter values duplicate names (e.g., \"1 - 3\" name appearing positions 1 3), enabling accurate result expansion. **Matching Strategy:** 1. Direct exact matching 2. Genus-level matching (exact fuzzy) 3. Species-level matching within genus 4. Infraspecies-level matching (2 levels original database) **Rank Validation:** algorithm implements strict rank validation prevent false positives.","code":""},{"path":[]},{"path":"https://paulesantos.github.io/peruflorads43/reference/matching_threatenedperu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match Species Names to Threatened Plant List of Peru — matching_threatenedperu","text":"","code":"if (FALSE) { # \\dontrun{ # Basic usage species_list <- c(\"Cattleya maxima\", \"Polylepis incana\") results <- matching_threatenedperu(species_list, source = \"original\")  # With duplicates species_dup <- c(\"Cattleya maxima\", \"Polylepis incana\", \"Cattleya maxima\") results_dup <- matching_threatenedperu(species_dup) nrow(results_dup) == 3  # TRUE - preserves duplicates  # Access metadata attr(results, \"match_rate\")  # Check for ambiguous matches get_ambiguous_matches(results, type = \"infraspecies\") } # }"},{"path":"https://paulesantos.github.io/peruflorads43/reference/suffix_match_species_within_genus_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Suffix Match Species within Genus — suffix_match_species_within_genus_helper","title":"Suffix Match Species within Genus — suffix_match_species_within_genus_helper","text":"Function match specific epithet exchanging common suffixes within already matched genus threatened species database.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/suffix_match_species_within_genus_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suffix Match Species within Genus — suffix_match_species_within_genus_helper","text":"","code":"suffix_match_species_within_genus_helper(df, target_df)"},{"path":"https://paulesantos.github.io/peruflorads43/reference/suffix_match_species_within_genus_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suffix Match Species within Genus — suffix_match_species_within_genus_helper","text":"df tibble. target_df tibble representing threatened species database containing reference list threatened species.","code":""},{"path":"https://paulesantos.github.io/peruflorads43/reference/suffix_match_species_within_genus_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suffix Match Species within Genus — suffix_match_species_within_genus_helper","text":"Returns tibble additional logical column suffix_match_species_within_genus, indicating whether specific epithet successfully matched within matched genus (`TRUE`) (`FALSE`).","code":""}]
